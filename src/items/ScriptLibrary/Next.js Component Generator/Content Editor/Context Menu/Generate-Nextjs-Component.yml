---
ID: "b358d699-3f57-4482-8849-37c2cfd7e644"
Parent: "45b4941a-bc6b-49da-97a1-1bb79387eddd"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/Next.js Component Generator/Content Editor/Context Menu/Generate-Nextjs-Component"
SharedFields:
- ID: "1c76313e-3c8c-4807-a826-135d10c39299"
  Hint: ShowRule
  Value: |
    <ruleset>
      <rule
        uid="{FCA6823B-2152-42A4-ADE5-101DC0D89844}">
        <conditions>
          <condition
            id="{D0810F9D-734C-452D-BBB6-4730368D68F1}"
            uid="09F8EA427F1B4AE6AAFA7DAA2BE48653"
            templateid="{04646A89-996F-4EE7-878A-FFDBF1F0EF0D}" />
        </conditions>
      </rule>
    </ruleset>
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function Get-FieldInfo
    Import-Function Show-ComponentDialog
    
    # Validations
    $contextItem = Get-Item .
    if ($contextItem -eq $null) {
    	Show-Alert -Title "No context item selected"
    	return
    }
    
    $isJsonRendering = Test-BaseTemplate -Item $contextItem -Template "{04646A89-996F-4EE7-878A-FFDBF1F0EF0D}"
    if (!$isJsonRendering) {
    	Show-Alert -Title "The selected item must be a JSON Rendering"
    	return
    }
    
    $componentName = ($contextItem.Fields | Where-Object { $_.Name -eq "componentName" }).value
    if ([string]::IsNullOrEmpty($componentName)) {
    	Show-Alert -Title "The component name field must have a value"
    	return
    }
    
    $datasourceTemplatePath = $contextItem.Fields | Where-Object { $_.Name -eq "Datasource Template" }
    if ([string]::IsNullOrEmpty($datasourceTemplatePath)) {
    	Show-Alert -Title "The datasource template field must have a value"
    	return
    }
    
    $datasourceTemplate = Get-Item -Path $datasourceTemplatePath
    if ($datasourceTemplate -eq $null) {
    	Show-Alert -Title "The datasource template cannot be found"
    	return
    }
    
    # Get datasource template fields information
    $fields = @{}
    Get-ChildItem -Item $datasourceTemplate -Recurse | Where-Object { $_.TemplateID -ne "{E269FBB5-3750-427A-9149-7AA950B49301}" } | ForEach-Object {
    	$fieldInfo = Get-FieldInfo -FieldName $_.Name -FieldType $_.Type
    	$fields.Add($_.Name,$fieldInfo)
    }
    
    $imports = $fields.Values | ForEach-Object { $_.Imports } | Sort-Object | Get-Unique
    $imports += @( "withDatasourceCheck")
    
    # Get rendering parameters template fields information
    $supportsRenderingIdentifierParameter = $false
    $supportsGridParameters = $false
    $supportsStylesParameter = $false
    
    $renderingParametersTemplateID = ($contextItem.Fields | Where-Object { $_.Name -eq "Parameters Template" })
    if (-not [string]::IsNullOrEmpty($renderingParametersTemplateID)) {
    	$renderingParametersTemplate = Get-Item -Path master: -Id $renderingParametersTemplateID
    	if ($renderingParametersTemplate -eq $null) {
    		Show-Alert -Title "The rendering parameters template cannot be found."
    	} else {
    		$supportsRenderingIdentifierParameter = Test-BaseTemplate -Item $renderingParametersTemplate -Template "{3DB3EB10-F8D0-4CC9-BE26-18CE7B139EC8}"
    		$supportsGridParameters = Test-BaseTemplate -Item $renderingParametersTemplate -Template "{FF75632A-03ED-4D31-B42A-1EEE45E5147F}"
    		$supportsStylesParameter = Test-BaseTemplate -Item $renderingParametersTemplate -Template "{D959F476-2A2C-40C6-81F5-FB75342BBFB9}"
    	}
    }
    
    # Generate component's code
    $componentCode = ""
    $idAttribute = if ($supportsRenderingIdentifierParameter) { " id={id}" } else { "" }
    $shouldGenerateClasses = $supportsGridParameters -or $supportsStylesParameter
    $classNameAttribute = if ($shouldGenerateClasses) { " className={classes}" } else { "" }
    
    if ($imports.count -gt 0) {
    	$componentCode += "import {`n"
    	foreach ($import in $imports) {
    		$componentCode += "  $($import),`n"
    	}
    	$componentCode += "} from '@sitecore-jss/sitecore-jss-nextjs';`n"
    }
    $componentCode += "import { ComponentProps } from 'lib/component-props';`n"
    $componentCode += "`n"
    
    $componentCode += "type $($componentName)Props = {`n"
    $componentCode += "  fields: {`n"
    foreach ($fieldName in $fields.Keys) {
    	$fieldInfo = $fields[$fieldName];
    	$prefix = if ($fieldInfo.Unsupported) { "// " } else { "" }
    	$componentCode += "    $($prefix)$($fieldName): $($fields[$fieldName].PropType);`n"
    }
    $componentCode += "  };`n"
    $componentCode += "} & ComponentProps;`n"
    $componentCode += "`n"
    
    $componentCode += "const $($componentName) = (props: $($componentName)Props): JSX.Element => {`n"
    if ($supportsRenderingIdentifierParameter) {
    	$componentCode += "  const id = props?.params?.RenderingIdentifier ?? undefined;`n"
    }
    if ($shouldGenerateClasses) {
    	$gridParameters = if ($supportsGridParameters) { "`${props?.params?.GridParameters ?? ''}" } else { $null }
    	$styles = if ($supportsStylesParameter) { "`${props?.params?.Styles ?? ''}" } else { $null }
    	$classes = (@( $gridParameters,$styles) -join " ").Trim()
    	$componentCode += "  const classes = ``$($classes)``.trimEnd();`n"
    }
    if ($supportsRenderingIdentifierParameter -or $shouldGenerateClasses) {
    	$componentCode += "`n"
    }
    $componentCode += "  return (`n"
    $componentCode += "    <div$($classNameAttribute)$($idAttribute)>`n"
    foreach ($fieldName in $fields.Keys) {
    	$componentCode += "      $($fields[$fieldName].Renderer)`n"
    }
    $componentCode += "    </div>`n"
    $componentCode += "  );`n"
    $componentCode += "};`n"
    $componentCode += "`n"
    $componentCode += "export const Default = withDatasourceCheck()<$($componentName)Props>($($componentName));`n"
    
    Show-ComponentDialog -ComponentCode $componentCode -ComponentName $componentName 
- ID: "f62c67b4-28b6-4a6f-91cb-db78cf054f4e"
  Hint: EnableRule
  Value: <ruleset />
Languages:
- Language: en
  Fields:
  - ID: "b5e02ad9-d56f-4c41-a065-a133db87bdeb"
    Hint: __Display name
    Value: Generate Next.js Component
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20240302T021041Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\jflheureux@getfishtank.ca
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\jflheureux@getfishtank.ca
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "98fc495e-c57d-4bf0-ba8e-1ca8f8e4ee25"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\jflheureux@getfishtank.ca
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20240302T191006Z
